#! ruby
require 'test/unit'
require 'rubbish'

class TestRubbish < Test::Unit::TestCase

  def test_shell_does_not_break
    assert_nothing_raised() do
      ['bash','fish'].each do |sh|
        [nil,true,false].each do |read|
          a = Rubbish.shell(sh, 'echo "OK"', read)
          b = Rubbish.shell(sh, read, 'echo "OK"')
          c = Rubbish.shell(sh, read){|psh| psh.puts 'echo "OK"'}
          [a,b,c].each do |x|
            case read
            when true, nil
              assert_equal("OK\n", x)
            when false
              assert_equal(true, x)
            end
          end
        end
      end
    end
  end

  def test_shell_edge_cases
    b = nil
    a = Rubbish.shell('bash') do |psh|
      psh.puts 'echo "Good"'
      psh.puts 'echo "Day!"'
      b = psh.gets
    end
    assert_equal "Good\n", b
    assert_equal "Day!\n", a
  end

  def test_fish_true_false
    a = Rubbish.shell('fish','true',false)
    assert_equal(true, a)
    b = Rubbish.shell('fish','false',false)
    assert_equal(false, b)
  end

end
